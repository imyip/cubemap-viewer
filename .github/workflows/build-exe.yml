name: Build Cubemap Viewer

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-jar:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: 使用 Maven 构建 JAR
      run: mvn clean package -B
    
    - name: 运行测试
      run: mvn test -B
    
    - name: 上传 JAR 文件
      uses: actions/upload-artifact@v4
      with:
        name: jar-file
        path: target/*.jar
        retention-days: 30

  build-windows-exe:
    needs: build-jar
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: 下载 JAR 文件
      uses: actions/download-artifact@v4
      with:
        name: jar-file
        path: target
    
    - name: 设置 Launch4j
      uses: actions/cache@v3
      id: launch4j-cache
      with:
        path: launch4j
        key: launch4j-3.50
    
    - name: 下载并安装 Launch4j
      if: steps.launch4j-cache.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        Write-Host "正在下载 Launch4j..."
        
        # 尝试多个下载源
        $downloaded = $false
        $sources = @(
          "https://github.com/orphan-oss/launch4j/releases/download/v3.50/launch4j-3.50-win32.zip",
          "https://versaweb.dl.sourceforge.net/project/launch4j/launch4j-3/3.50/launch4j-3.50-win32.zip"
        )
        
        foreach ($url in $sources) {
          try {
            Write-Host "尝试从 $url 下载..."
            Invoke-WebRequest -Uri $url -OutFile "launch4j.zip" -UseBasicParsing -TimeoutSec 60
            $downloaded = $true
            Write-Host "✓ 下载成功"
            break
          } catch {
            Write-Host "✗ 下载失败: $_"
          }
        }
        
        if (-not $downloaded) {
          Write-Error "无法从任何源下载 Launch4j"
          exit 1
        }
        
        Write-Host "解压 Launch4j..."
        Expand-Archive -Path "launch4j.zip" -DestinationPath "." -Force
        
        if (Test-Path "launch4j\launch4jc.exe") {
          Write-Host "✓ Launch4j 安装完成"
        } else {
          Write-Error "Launch4j 安装验证失败"
          exit 1
        }
    
    - name: 创建 Launch4j 配置文件
      shell: pwsh
      run: |
        $jarFile = Get-ChildItem -Path "target" -Filter "*.jar" | Select-Object -First 1
        $jarName = $jarFile.Name
        
        $config = @"
        <?xml version="1.0" encoding="UTF-8"?>
        <launch4jConfig>
          <dontWrapJar>false</dontWrapJar>
          <headerType>gui</headerType>
          <jar>target/$jarName</jar>
          <outfile>target/CubemapViewer.exe</outfile>
          <errTitle>Cubemap Viewer Error</errTitle>
          <cmdLine></cmdLine>
          <chdir>.</chdir>
          <priority>normal</priority>
          <downloadUrl>https://www.oracle.com/java/technologies/downloads/</downloadUrl>
          <supportUrl></supportUrl>
          <stayAlive>false</stayAlive>
          <restartOnCrash>false</restartOnCrash>
          <manifest></manifest>
          <icon></icon>
          <jre>
            <path>%JAVA_HOME%</path>
            <bundledJre64Bit>false</bundledJre64Bit>
            <bundledJreAsFallback>false</bundledJreAsFallback>
            <minVersion>11</minVersion>
            <maxVersion></maxVersion>
            <jdkPreference>preferJre</jdkPreference>
            <runtimeBits>64/32</runtimeBits>
          </jre>
        </launch4jConfig>
        "@
        
        $config | Out-File -FilePath "launch4j-config.xml" -Encoding UTF8
    
    - name: 使用 Launch4j 生成 EXE
      shell: pwsh
      run: |
        $launch4jExe = Join-Path $PWD "launch4j\launch4jc.exe"
        
        if (-not (Test-Path $launch4jExe)) {
          Write-Error "Launch4j 可执行文件不存在: $launch4jExe"
          exit 1
        }
        
        Write-Host "使用 Launch4j 生成 EXE..."
        & $launch4jExe "launch4j-config.xml"
        
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Launch4j 执行失败"
          exit 1
        }
    
    - name: 验证 EXE 文件
      shell: pwsh
      run: |
        if (Test-Path "target/CubemapViewer.exe") {
          Write-Host "✓ EXE 文件生成成功"
          $size = (Get-Item "target/CubemapViewer.exe").Length / 1MB
          Write-Host "文件大小: $([math]::Round($size, 2)) MB"
        } else {
          Write-Error "EXE 文件生成失败"
          exit 1
        }
    
    - name: 上传 Windows EXE
      uses: actions/upload-artifact@v4
      with:
        name: windows-exe
        path: target/CubemapViewer.exe
        retention-days: 30

  build-windows-installer:
    needs: build-jar
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: 构建 JAR
      run: mvn clean package -B -DskipTests
    
    - name: 使用 jpackage 创建 Windows 安装包
      shell: pwsh
      run: |
        $jarFile = Get-ChildItem -Path "target" -Filter "*.jar" | Select-Object -First 1
        $jarPath = $jarFile.FullName
        
        # 创建输出目录
        New-Item -ItemType Directory -Force -Path "installer-output"
        
        # 使用 jpackage 创建 Windows 安装程序
        jpackage `
          --input target `
          --name "CubemapViewer" `
          --main-jar $jarFile.Name `
          --type exe `
          --dest installer-output `
          --app-version "1.0.0" `
          --description "A cubemap viewer written in Java" `
          --vendor "dot-cross" `
          --win-console `
          --win-shortcut `
          --win-menu
    
    - name: 上传 Windows 安装程序
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: installer-output/*.exe
        retention-days: 30

  release:
    needs: [build-windows-exe, build-windows-installer]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 下载所有构建产物
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: 列出所有文件
      run: |
        echo "构建产物列表:"
        ls -R artifacts/
    
    - name: 创建 Release（仅当推送标签时）
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/windows-exe/*.exe
          artifacts/windows-installer/*.exe
          artifacts/jar-file/*.jar
        body: |
          ## Cubemap Viewer Release
          
          ### 下载说明：
          - **CubemapViewer.exe** - Windows 可执行文件（需要安装 Java 17+）
          - **CubemapViewer-1.0.0.exe** - Windows 安装程序（包含 Java 运行时）
          - **cubemap-viewer-*.jar** - 跨平台 JAR 文件
          
          ### 使用方法：
          1. 下载 Windows 安装程序或 EXE 文件
          2. 如果使用 EXE，确保已安装 Java 17 或更高版本
          3. 运行程序并加载 cubemap 图像
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
